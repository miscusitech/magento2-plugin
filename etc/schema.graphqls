type Query {
    getSatispayPayment(payment_id: ID!): SatispayPayment
    @resolver(class: "Satispay\\Satispay\\Model\\Resolver\\PaymentStatus")
}

type Mutation {
    createSatispayPayment(cart_id: ID!): SatispayPayment
    @resolver(class: "Satispay\\Satispay\\Model\\Resolver\\PaymentRequest")
}

type SatispayPayment {
    id: ID!
    status: StatusEnum!
    amount: Float
}

enum StatusEnum {
    AUTHORIZED
    PENDING
    ACCEPTED
    CANCELED
}
